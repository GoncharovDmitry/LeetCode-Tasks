Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.



class Solution {
    func isValid(_ s: String) -> Bool {
        //if s.count % 2 != 0 { return false }

        var arr  = [Int]()

        let dic = [
            Character("("): 1,
            Character(")"): -1,
            Character("{"): 2,
            Character("}"): -2,
            Character("["): 3,
            Character("]"): -3
        ]

        for char in s {
            let tmp = dic[char]!
            if tmp > 0 {
                arr.append(tmp)
            } else {
                if abs(tmp) == arr.last {
                    arr.removeLast()
                } else {
                    return false
                }
            }
        }

        return arr.isEmpty
    }
}


